# Admin 페이지 요구사항 문서

## 주의사항
- Header가 보이지 않도록 설계합니다.
- 아주 전형적이고 기본적인 관리자 대쉬보드 페이지 느낌으로 디자인 및 구성합니다. Admin 기능 확장성을 고려해 메뉴를 여러개 추가할 수 있도록 고려해서 디자인을 구성합니다.
- 서버사이드 랜더링으로 페이지 접근 시 Access Token으로 ROLE_ADMIN을 검사하지만, 토큰이 만료되었다고 재발급을 하지는 않습니다. 만료가 되었을 경우, 404 페이지를 띄웁니다.
- 아래의 다양한 API를 정상적으로 동작할 수 있도록 만들며, API 호출 관련해서는 클라이언트 사이드 랜더링을 진행합니다. 일반적인 호출은 비즈니스 로직의 API 와 동일하게 사용하며, 똑같이 재발급도 진행하기 때문에 똑같은 apiClient.ts를 사용하면 됩니다.
- 기존의 다른 비즈니스 로직과 겹치지 않도록 코드를 작성합니다. 또한 분리도 철저하게 합니다. [(admin) 같은 네이밍을 이용해서]
- 각종 팝업 및 예외처리, 여러 상황에 대한 인지를 할 수 있도록 하며, 수정 및 삭제는 철저히 경고 팝업을 두 번 이상 띄워 허가를 받도록 합니다.
- **작성 요령은 이미 작성된 기존의 코드를 무조건 참고해서 코드 작성 방식, 디자인을 참고합니다. (중요)**

## Likebutter Admin API 문서 (한국어)

이 문서는 소스 코드를 기반으로 Likebutter Admin API에 대한 상세 설명을 제공합니다. 모든 엔드포인트는 `ROLE_ADMIN` 권한이 필요합니다.

---

## 1. 계정 API (`/admin/accounts`)

사용자 계정과 관련된 관리자 기능을 처리합니다.

### **GET /admin/accounts**
- **설명**: 계정 목록을 페이지네이션으로 조회합니다.
- **쿼리 파라미터**: `pageable`, `email`, `provider`, `role`, `startDate`, `endDate`
- **응답 (200 OK)**:
  ```json
  {
    "status": 200,
    "data": {
      "content": [
        {
          "id": 1,
          "email": "user@example.com",
          "provider": "GOOGLE",
          "role": "USER",
          "createdAt": "2025-08-09T10:00:00",
          "updatedAt": "2025-08-09T11:00:00"
        }
      ],
      "pageable": {
        "sort": {
          "sorted": false,
          "unsorted": true,
          "empty": true
        },
        "offset": 0,
        "pageNumber": 0,
        "pageSize": 20,
        "paged": true,
        "unpaged": false
      },
      "last": true,
      "totalPages": 1,
      "totalElements": 1,
      "size": 20,
      "number": 0,
      "sort": {
        "sorted": false,
        "unsorted": true,
        "empty": true
      },
      "first": true,
      "numberOfElements": 1,
      "empty": false
    }
  }
  ```

### **GET /admin/accounts/{accountId}**
- **설명**: 단일 계정의 상세 정보를 조회합니다.
- **경로 변수**: `accountId` (Long)
- **응답 (200 OK)**:
  ```json
  {
    "status": 200,
    "data": {
      "id": 1,
      "email": "user@example.com",
      "provider": "GOOGLE",
      "role": "USER",
      "createdAt": "2025-08-09T10:00:00",
      "updatedAt": "2025-08-09T11:00:00",
      "subscriptions": [
        {
          "id": 1,
          "accountId": 1,
          "planKey": "PREMIUM_PLAN",
          "status": "ACTIVE",
          "startDate": "2025-08-01",
          "endDate": "2025-09-01"
        }
      ],
      "payments": [],
      "tasks": []
    }
  }
  ```

### **PATCH /admin/accounts/{accountId}**
- **설명**: 기존 계정 정보를 수정합니다.
- **경로 변수**: `accountId` (Long)
- **요청 본문**:
  ```json
  {
    "role": "ADMIN",
  }
  ```
- **응답 (200 OK)**: (GET /admin/accounts/{accountId} 와 동일한 구조의 수정된 데이터)
  ```json
  {
    "status": 200,
    "data": {
      "id": 1,
      "email": "user@example.com",
      "provider": "GOOGLE",
      "role": "ADMIN",
      "createdAt": "2025-08-09T10:00:00",
      "updatedAt": "2025-08-09T12:00:00",
      "subscriptions": [],
      "payments": [],
      "tasks": []
    }
  }
  ```

---

## 2. 대시보드 통계 API (`/admin/stats`)

### **GET /admin/stats/summary**
- **설명**: 관리자 대시보드의 핵심 통계 요약 정보를 조회합니다.
- **응답 (200 OK)**:
  ```json
  {
    "status": 200,
    "data": {
      "totalUsers": 1500,
      "newUsers": 25,
      "activeSubscriptions": 300,
      "totalRevenue": 1234567.89,
      "taskStatusCounts": {
        "PENDING": 10,
        "PROCESSING": 5,
        "SUCCESS": 100,
        "FAILED": 2
      }
    }
  }
  ```

---

## 3. 결제 API (`/admin/payments`)

### **GET /admin/payments**
- **설명**: 결제 기록 목록을 페이지네이션으로 조회합니다.
- **쿼리 파라미터**: `pageable`, `accountId`, `status`, `planId`, `startDate`, `endDate`
- **응답 (200 OK)**:
  ```json
  {
    "status": 200,
    "data": {
      "content": [
        {
          "id": 1,
          "paymentId": "portone-payment-id-123",
          "accountId": 1,
          "plan": "PREMIUM",
          "amount": 10000,
          "status": "PAID",
          "createdAt": "2025-08-01T10:00:00"
        }
      ],
      "pageable": { ... }
    }
  }
  ```

### **POST /admin/payments/{paymentId}/refund**
- **설명**: 특정 결제에 대한 환불을 시작합니다. (미구현)
- **경로 변수**: `paymentId` (Long)
- **요청 본문**:
  ```json
  {
    "reason": "사용자 요청"
  }
  ```
- **응답 (501 NOT_IMPLEMENTED)**:
  ```json
  {
    "status": 501,
    "data": null
  }
  ```

---

## 4. 구독 API (`/admin/subscriptions`)

### **GET /admin/subscriptions**
- **설명**: 구독 목록을 페이지네이션으로 조회합니다.
- **쿼리 파라미터**: `pageable`, `accountId`, `plan`, `status`
- **응답 (200 OK)**:
  ```json
  {
    "status": 200,
    "data": {
      "content": [
        {
          "id": 1,
          "accountId": 1,
          "planKey": "PREMIUM_PLAN",
          "status": "ACTIVE",
          "startDate": "2025-08-01",
          "endDate": "2025-09-01"
        }
      ],
      "pageable": { ... }
    }
  }
  ```

### **PATCH /admin/subscriptions/{subscriptionId}/status**
- **설명**: 구독의 상태 또는 만료일을 수정합니다.
- **경로 변수**: `subscriptionId` (Long)
- **요청 본문**:
  ```json
  {
    "status": "CANCELLED",
    "newExpiryDate": "2025-08-15"
  }
  ```
- **응답 (200 OK)**:
  ```json
  {
    "status": 200,
    "data": {
      "id": 1,
      "accountId": 1,
      "planKey": "PREMIUM_PLAN",
      "status": "CANCELLED",
      "startDate": "2025-08-01",
      "endDate": "2025-08-15"
    }
  }
  ```

---

## 5. 작업 API (`/admin/tasks`)

### **GET /admin/tasks**
- **설명**: 작업 목록을 페이지네이션으로 조회합니다.
- **쿼리 파라미터**: `pageable`, `accountId`, `status`, `startDate`, `endDate`
- **응답 (200 OK)**:
  ```json
  {
    "status": 200,
    "data": {
      "content": [
        {
          "id": 1,
          "accountId": 1,
          "status": "SUCCESS",
          "createdAt": "2025-08-02T14:00:00"
        }
      ],
      "pageable": { ... }
    }
  }
  ```

### **GET /admin/tasks/{taskId}**
- **설명**: 단일 작업의 상세 정보를 조회합니다.
- **경로 변수**: `taskId` (Long)
- **응답 (200 OK)**:
  ```json
  {
    "status": 200,
    "data": {
      "id": 1,
      "accountId": 1,
      "status": "SUCCESS",
      "details": "{\"prompt\": \"A cat sitting on a table\", \"result_url\": \"...\"}",
      "createdAt": "2025-08-02T14:00:00"
    }
  }
  ```

### **POST /admin/tasks/{taskId}/retry**
- **설명**: 실패한 작업을 재시도합니다.
- **경로 변수**: `taskId` (Long)
- **응답 (204 NO_CONTENT)**:
  ```json
  {
    "status": 204,
    "data": null
  }
  ```

---

## 6. 사용자 API (`/admin/users`)

### **GET /admin/users**
- **설명**: 사용자 프로필 목록을 페이지네이션으로 조회합니다.
- **쿼리 파라미터**: `pageable`, `name`
- **응답 (200 OK)**:
  ```json
  {
    "status": 200,
    "data": {
      "content": [
        {
          "id": 1,
          "name": "홍길동",
          "gender": "MALE",
          "country": "South Korea",
          "plan": "PREMIUM",
          "createdAt": "2025-08-09T10:00:00"
        }
      ],
      "pageable": { ... }
    }
  }
  ```
